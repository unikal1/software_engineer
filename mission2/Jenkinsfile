pipeline {
    agent any
    environment {
        JUNIT_JAR = "mission2/lib/junit-platform-console-standalone-1.7.1-all.jar"
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build') {
            steps {
                script {
                    if (isUnix()) {
                        sh 'mkdir -p classes'
                        sh 'javac -encoding UTF-8 -d classes mission2/src/**/*.java'
                    } else {
                        bat 'mkdir classes'
                        bat 'javac -encoding UTF-8 -d classes mission2/src/**/*.java'
                    }
                }
            }
        }
        stage('Verify JUnit JAR') {
            steps {
                script {
                    if (isUnix()) {
                        sh "ls -l mission2/lib/"
                        sh "test -f $JUNIT_JAR && echo 'JUnit JAR found' || echo 'JUnit JAR not found'"
                    } else {
                        bat "dir mission2\\lib"
                        bat "if exist %JUNIT_JAR% (echo JUnit JAR found) else (echo JUnit JAR not found)"
                    }
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    def classpath = isUnix() ? "classes:mission2/lib/*:$env.JUNIT_JAR" : "classes;mission2/lib/*;$env.JUNIT_JAR"
                    if (isUnix()) {
                        sh "java -cp $classpath org.junit.platform.console.ConsoleLauncher --scan-classpath > test_results.txt || true"
                    } else {
                        bat "java -cp $classpath org.junit.platform.console.ConsoleLauncher --scan-classpath > test_results.txt || true"
                    }
                }
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: 'test_results.txt', allowEmptyArchive: true
        }
        failure {
            echo 'Build or test failed'
        }
        success {
            echo 'Build and test succeeded'
        }
    }
}